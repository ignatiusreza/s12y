-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Graphql.Query exposing (..)

import Api.Graphql.InputObject
import Api.Graphql.Interface
import Api.Graphql.Object
import Api.Graphql.Scalar
import Api.Graphql.ScalarCodecs
import Api.Graphql.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)


type alias ProjectRequiredArguments =
    { id : Api.Graphql.ScalarCodecs.Id }


{-| Lookup a single project by id (uuid)
-}
project : ProjectRequiredArguments -> SelectionSet decodesTo Api.Graphql.Object.Project -> SelectionSet (Maybe decodesTo) RootQuery
project requiredArgs object_ =
    Object.selectionForCompositeField "project" [ Argument.required "id" requiredArgs.id (Api.Graphql.ScalarCodecs.codecs |> Api.Graphql.Scalar.unwrapEncoder .codecId) ] object_ (identity >> Decode.nullable)
